#
# nuna_sql_tools: Copyright 2022 Nuna Inc
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
package(default_visibility = ["//visibility:public"])

load("@nuna_sql_tools_pip_deps//:requirements.bzl", "requirement")
load("@bazel_pylint//:pyrules.bzl", "py_lint_binary", "py_lint_library", "py_lint_test")
load("@rules_python//python:defs.bzl", "py_library")

py_lint_library(
    name = "grammars",
    srcs = [
        "graphing.py",
        "statement.py",
        "tokens.py",
        "trees.py",
    ],
    rules = "//:pylintrc",
    srcs_version = "PY3",
    deps = [
        "//dataschema",
        requirement("antlr4-python3-runtime"),
        requirement("graphviz"),
    ],
)

py_lint_library(
    name = "parse_sql_lib",
    srcs = [
        "parse_sql_flags.py",
        "parse_sql_lib.py",
    ],
    rules = "//:pylintrc",
    srcs_version = "PY3",
    deps = [
        ":grammars",
        "//sql_analyze/grammars/ClickHouse:parse_lib",
        "//sql_analyze/grammars/Hive:parse_lib",
        requirement("absl-py"),
    ],
)

py_lint_binary(
    name = "parse_sql",
    srcs = ["parse_sql.py"],
    rules = "//:pylintrc",
    srcs_version = "PY3",
    deps = [
        ":parse_sql_lib",
        requirement("absl-py"),
    ],
)

py_lint_test(
    name = "antlr_util_test",
    srcs = ["antlr_util_test.py"],
    rules = "//:pylintrc",
    srcs_version = "PY3",
    deps = [
        ":grammars",
        "//sql_analyze/grammars/Hive:parse_lib",
    ],
)

py_lint_test(
    name = "parse_sql_test",
    srcs = ["parse_sql_test.py"],
    rules = "//:pylintrc",
    srcs_version = "PY3",
    deps = [
        ":grammars",
        "//dataschema",
        "//sql_analyze/grammars/ClickHouse:parse_lib",
        "//sql_analyze/grammars/Hive:parse_lib",
    ],
)

py_lint_binary(
    name = "detect_endpoints",
    srcs = ["detect_endpoints.py"],
    rules = "//:pylintrc",
    srcs_version = "PY3",
    deps = [
        ":parse_sql_lib",
    ],
)
